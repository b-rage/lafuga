{"version":3,"sources":["context/Storage.js","firebase.js","components/cms/FileUpload.js","components/cms/AddBook.js","components/cms/AddAuthor.js","components/cms/BookListItem.js","components/cms/ListBooks.js","components/cms/Dashboard.js","components/cms/Login.js","components/cms/BookNews.js","App.js","serviceWorker.js","index.js"],"names":["storageContext","React","createContext","StorageProvider","Consumer","state","loggedIn","setLoggedIn","value","setState","Provider","this","props","children","Component","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FileUpload","doImageUrl","fileType","required","useState","imageUrl","setImageUrl","className","type","onChange","e","file","target","files","name","storage","ref","put","then","snapshot","getDownloadURL","downUrl","width","src","alt","AddBook","author","authorId","title","subtitle","introduction","translator","prologue","format","binding","pages","isbn","pvp","description","collection","pubDate","moment","storeUrl","startReedUrl","pressNoteUrl","imageAuthorUrl","msg","updateState","newsTitle","newsDate","newsUrl","newsFileUrl","news","updateNews","addNews","updateAddNews","authors","db","firestore","useEffect","get","querySnapshot","forEach","doc","push","data","idAuthor","id","catch","error","console","log","handleInputChange","handleNewsInputChange","onSubmit","preventDefault","add","docRef","options","getOptionLabel","option","placeholder","style","height","maxWidth","marginLeft","url","defaultDate","onSelect","Date","onClick","AddAuthor","dateAuthor","BookListItem","to","textDecoration","ListBooks","idBook","listBooks","map","item","key","Dashboard","routes","path","exact","sidebar","main","route","component","withRouter","username","password","history","BookNews","now","render","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfa18ab7.chunk.js","sourcesContent":["import React from 'react'\n//import logic from '../logic'\n\n\nexport const storageContext = React.createContext()\n\nexport const StorageConsumer = storageContext.Consumer\n\nexport const WithStorageConsumer = WrappedComponent => {\n  return function(props) {\n    return (\n      <StorageConsumer>\n        {ctx => <WrappedComponent {...props} context={ctx} />}\n      </StorageConsumer>\n    )\n  }\n}\n\nexport class StorageProvider extends React.Component {\n\n\n  state = {\n    loggedIn: false,\n    setLoggedIn: value => {\n        this.setState({ loggedIn: value })\n      },\n  }\n\n\n\n  render() {\n    return (\n      <storageContext.Provider value={this.state}>\n        {this.props.children}\n      </storageContext.Provider>\n    )\n  }\n}","import * as firebase from 'firebase';\nimport 'firebase/firestore'\n\nconst config = {\n    /* apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID, */\n\n    apiKey: \"AIzaSyCok1_VK2PXjScQcTELw8jSrSbeUtqPWjU\",\n    authDomain: \"lafuga-8ef6d.firebaseapp.com\",\n    databaseURL: \"https://lafuga-8ef6d.firebaseio.com\",\n    projectId: \"lafuga-8ef6d\",\n    storageBucket: \"lafuga-8ef6d.appspot.com\",\n    messagingSenderId: \"496213732348\",\n    appId: \"1:496213732348:web:f3a81c4748e3bce242e079\"\n  };\n\nexport const firebaseApp = firebase.initializeApp(config);\n\n","import React, { useState } from 'react';\nimport { firebaseApp } from '../../firebase';\n\n\nconst FileUpload = ({ doImageUrl, fileType, required }) => {\n\n    const [imageUrl, setImageUrl] = useState('');\n\n    const onUpload = e => {\n\n        const file = e.target.files && e.target.files[0];\n        if(file.name) {\n            const storageRef = firebaseApp.storage().ref(`/${fileType}/${file.name}`);\n            const task = storageRef.put(file);\n\n            task.then(snapshot => {\n                return snapshot.ref.getDownloadURL()\n            }).then(downUrl => {\n                setImageUrl(downUrl);\n                doImageUrl(downUrl);\n            });\n        }\n        \n\n    }\n\n    return (\n        <>\n            <input className=\"input-class\" type=\"file\" onChange={onUpload} required={required}/>\n            <img className=\"image-class\" width=\"60\" src={imageUrl} alt='' />\n        </>\n    );\n}\n\nexport default FileUpload;","import React, { useState, useEffect } from 'react';\nimport { firebaseApp } from '../../firebase';\nimport moment from 'moment';\nimport DatePicker from '@trendmicro/react-datepicker';\nimport '@trendmicro/react-datepicker/dist/react-datepicker.css';\nimport FileUpload from './FileUpload';\nimport Select from 'react-select';\n\n\nconst AddBook = () => {\n\n\n  const [state, updateState] = useState({\n    author: '',\n    authorId: '',\n    title: '',\n    subtitle: '',\n    introduction: '',\n    translator: '',\n    prologue: '',\n    format: '',\n    binding: '',\n    pages: '',\n    isbn: '',\n    pvp: '',\n    description: '',\n    collection: '',\n    pubDate: moment('2014-03-09').format('YYYY-MM-DD'),\n    storeUrl: '',\n    imageUrl: '',\n    startReedUrl: '',\n    pressNoteUrl: '',\n    imageAuthorUrl: '',\n    msg: false\n  });\n\n  const [news, updateNews] = useState({\n    newsTitle: '',\n    newsDate: moment('2014-03-09').format('YYYY-MM-DD'),\n    newsUrl: '',\n    newsFileUrl: ''\n  });\n\n  const [addNews, updateAddNews] = useState(false);\n  let authors = [];\n\n  const db = firebaseApp.firestore();\n\n\n  useEffect(() => {\n\n    db.collection(\"authors\")\n    .get()\n    .then(function(querySnapshot) {\n        querySnapshot.forEach(doc => {\n          authors.push({author: doc.data().author, imageAuthorUrl: doc.data().imageAuthorUrl, description: doc.data().description, idAuthor: doc.id})\n        });\n    })\n    .catch(function(error) {\n        console.log(\"Error getting documents: \", error);\n    });\n  });\n\n\n  const handleInputChange = e => {\n    updateState({ ...state, [e.target.name]: e.target.value, msg: false })\n  }\n\n  const handleDateChange = e => {\n    updateState({ ...state, pubDate: moment(new Date(e)).format(\"DD/MM/YYYY\") })\n  };\n\n\n  const doImageUrl = (url) => {\n    updateState({ ...state, imageUrl: url })\n  }\n\n  const doStartReedUrl = (url) => {\n    updateState({ ...state, startReedUrl: url })\n  }\n\n  const doPressNoteUrl = (url) => {\n    updateState({ ...state, pressNoteUrl: url })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Add a new document in collection \"books\"\n    db.collection(\"books\").add({      \n      author: state.author,\n      authorId: state.authorId,\n      imageAuthorUrl: state.imageAuthorUrl,\n      title: state.title,\n      subtitle: state.subtitle,\n      introduction: state.introduction,\n      translator: state.translator,\n      prologue: state.prologue,\n      format: state.format,\n      binding: state.binding,\n      pages: state.pages,\n      isbn: state.isbn,\n      pvp: state.pvp,\n      description: state.description,\n      collection: state.collection,\n      pubDate: state.pubDate,\n      imageUrl: state.imageUrl, \n      storeUrl: state.storeUrl,  \n      startReedUrl: state.startReedUrl, \n      pressNoteUrl: state.pressNoteUrl\n    })\n      .then((docRef) => {\n        db.collection(`books/${docRef.id}/news`).add({      \n          newsTitle: news.newsTitle,\n          newsDate: news.newsDate,\n          newsUrl: news.newsUrl,\n          newsFileUrl: news.newsFileUrl\n        })\n          .then(() => {\n            console.log(\"Document successfully written!\");\n          })\n          .catch(error => {\n            console.error(\"Error writing document: \", error);\n          });\n        updateState({ ...state, msg: true })\n      })\n      .catch(error => {\n        console.error(\"Error writing document: \", error);\n      });      \n  }\n\n  const handleNewsInputChange = e => {\n    updateNews({ ...news, [e.target.name]: e.target.value })\n  }\n\n  const onAddNewsChange = () => {\n    updateAddNews(!addNews)\n  }\n\n  const handleDateNewsChange = e => {\n    updateNews({ ...news, newsDate: moment(new Date(e)).format(\"DD/MM/YYYY\") })\n  };\n\n  const doNewsNoteUrl = (url) => {\n    updateNews({ ...news, newsFileUrl: url })\n  }\n\n  const handleAuthorChange = value => {\n    updateState({ ...state, author: value.author, authorId: value.idAuthor, imageAuthorUrl: value.imageAuthorUrl })\n  } \n\n  return (\n    <>\n      <form className=\"form-class\" onSubmit={handleSubmit}>\n        <div className=\"div-class\">\n          <h1 className=\"ml-35\">Añadir Libro</h1>\n          <p className=\"label-class\">Autor</p>\n          <div className=\"ml-35\">\n            <Select\n                options={authors}\n                getOptionLabel={(option) => option.author}\n                placeholder={'Elegir Autor'}\n                style={\n                {height: '40px',\n                width: '80%',\n                maxWidth: '400px',\n                marginLeft: '35px'}\n                }\n                onChange={handleAuthorChange}\n            />\n          </div>\n          <br></br>\n          <p className=\"label-class\">Titulo</p>\n          <input className=\"input-class\" placeholder=\"Titulo\" type=\"text\" onChange={handleInputChange} name=\"title\" value={state.title || ''} required />\n          <p className=\"label-class\">Subtitulo</p>\n          <input className=\"input-class\" placeholder=\"Subtitulo\" type=\"text\" onChange={handleInputChange} name=\"subtitle\" value={state.subtitle || ''} />\n          <p className=\"label-class\">Introduccion</p>\n          <input className=\"input-class\" placeholder=\"Introduccion\" type=\"text\" onChange={handleInputChange} name=\"introduction\" value={state.introduction || ''} />\n          <p className=\"label-class\">Traductor</p>\n          <input className=\"input-class\" placeholder=\"Traductor\" type=\"text\" onChange={handleInputChange} name=\"translator\" value={state.translator || ''} required />\n          <p className=\"label-class\">Prologo</p>\n          <input className=\"input-class\" placeholder=\"Prologo\" type=\"text\" onChange={handleInputChange} name=\"prologue\" value={state.prologue || ''} />\n          <p className=\"label-class\">Formato</p>\n          <input className=\"input-class\" placeholder=\"Formato\" type=\"text\" onChange={handleInputChange} name=\"format\" value={state.format || ''} required />\n          <p className=\"label-class\">Encuadernacion</p>\n          <input className=\"input-class\" placeholder=\"Encuadernacion\" type=\"text\" onChange={handleInputChange} name=\"binding\" value={state.binding || ''} required />\n          <p className=\"label-class\">Paginas</p>\n          <input className=\"input-class\" placeholder=\"Paginas\" type=\"text\" onChange={handleInputChange} name=\"pages\" value={state.pages || ''} required />\n          <p className=\"label-class\">ISBN</p>\n          <input className=\"input-class\" placeholder=\"ISBN\" type=\"text\" onChange={handleInputChange} name=\"isbn\" value={state.isbn || ''} required />\n          <p className=\"label-class\">PVP</p>\n          <input className=\"input-class\" placeholder=\"PVP\" type=\"text\" onChange={handleInputChange} name=\"pvp\" value={state.pvp || ''} required />\n          <p className=\"label-class\">Descripción</p>\n          <input className=\"input-class\" placeholder=\"Descripción\" type=\"text\" onChange={handleInputChange} name=\"description\" value={state.description || ''} required />\n          <p className=\"label-class\">Colección</p>\n          <input className=\"input-class\" placeholder=\"Colección\" type=\"text\" onChange={handleInputChange} name=\"collection\" value={state.collection || ''} required />\n          <p className=\"label-class\">Link a tienda</p>\n          <input className=\"input-class\" placeholder=\"Link a tienda\" type=\"text\" onChange={handleInputChange} name=\"storeUrl\" value={state.storeUrl || ''} required />\n          <p className=\"label-class\">Portada</p>\n          <FileUpload doImageUrl={doImageUrl} fileType=\"books\" required={true}/>\n          <br></br>\n          <p className=\"label-class\">Fecha publicacion</p>\n          <p className=\"p-class\">{state.pubDate || ''}</p>\n          <DatePicker\n            defaultDate={state.pubDate}\n            onSelect={handleDateChange}\n          />\n          <p className=\"label-class\">Empieza a leer</p>\n          <FileUpload doImageUrl={doStartReedUrl} fileType=\"pdfs\" required={false}/>\n          <p className=\"label-class\">Nota de prensa</p>\n          <FileUpload doImageUrl={doPressNoteUrl} fileType=\"pdfs\" required={false}/>\n          <br></br><br></br>\n          <button className=\"button-class\" type=\"button\" onClick={onAddNewsChange}>Añadir Noticia de prensa</button>\n          {addNews && \n          <>\n          <p className=\"label-class\">Fecha noticia</p>\n          <p className=\"p-class\">{news.newsDate || ''}</p>\n          <DatePicker\n            defaultDate={news.newsDate}\n            onSelect={handleDateNewsChange}\n          />\n          <p className=\"label-class\">Titulo Noticia</p>\n          <input className=\"input-class\" placeholder=\"Titulo Noticia\" type=\"text\" onChange={handleNewsInputChange} name=\"newsTitle\" value={news.newsTitle || ''} required />\n          <p className=\"label-class\">Link Noticia</p>\n          <input className=\"input-class\" placeholder=\"Link Noticia\" type=\"text\" onChange={handleNewsInputChange} name=\"newsUrl\" value={news.newsUrl || ''}  />\n          <p className=\"label-class\">Importar fichero noticia</p>\n          <FileUpload doImageUrl={doNewsNoteUrl} fileType=\"pdfs\" required={false}/>\n          </>}\n          <br></br>\n          {/* <p className=\"label-class\">Titulo Noticia</p>\n          <input className=\"input-class\" placeholder=\"Titulo Noticia\" type=\"text\" onChange={handleInputChange} name=\"news.newsTitle\" value={news.newsTitle || ''} /> */}\n         \n          <button className=\"button-class\" type=\"submit\">Guardar</button>\n          {state.msg && <h2>Libro añadido con exito</h2>}\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default AddBook;","import React, { useState, useEffect } from 'react';\nimport { firebaseApp } from '../../firebase';\nimport '@trendmicro/react-datepicker/dist/react-datepicker.css';\nimport FileUpload from './FileUpload';\n\n\nconst AddAuthor = () => {\n\n  const [state, updateState] = useState({\n    author: '',\n    description: '',\n    imageAuthorUrl: '',\n    dateAuthor: '',\n    msg: false\n  });\n\n  const db = firebaseApp.firestore();\n\n\n  const handleInputChange = e => {\n    updateState({ ...state, [e.target.name]: e.target.value, msg: false })\n  }\n\n  const doImageAuthorUrl = (url) => {\n    updateState({ ...state, imageAuthorUrl: url })\n  }\n\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Add a new document in collection \"books\"\n    db.collection(\"authors\").add({      \n      author: state.author,\n      description: state.description,\n      imageAuthorUrl: state.imageAuthorUrl,\n      dateAuthor: state.dateAuthor\n    })\n    .then(() => {\n        updateState({ ...state, msg: true })\n      })\n      .catch(error => {\n        console.error(\"Error writing document: \", error);\n      });      \n  }\n\n  return (\n    <>\n\n      <form className=\"form-class\" onSubmit={handleSubmit}>\n        <div className=\"div-class\">\n          <h1 className=\"ml-35\">Añadir Autor</h1>\n          <p className=\"label-class\">Autor</p>\n          <input className=\"input-class\" placeholder=\"Autor\" type=\"text\" onChange={handleInputChange} name=\"author\" value={state.author || ''} required />  \n          <p className=\"label-class\">Fecha nacimiento/muerte autor</p>\n          <input className=\"input-class\" placeholder=\"Fecha\" type=\"text\" onChange={handleInputChange} name=\"dateAuthor\" value={state.dateAuthor || ''} />         \n          <p className=\"label-class\">Descripción</p>\n          <input className=\"input-class\" placeholder=\"Descripción\" type=\"text\" onChange={handleInputChange} name=\"description\" value={state.description || ''} required />\n          <p className=\"label-class\">Foto Autor</p>\n          <FileUpload doImageUrl={doImageAuthorUrl} fileType=\"authors\" required={false}/>\n          <br></br>        \n          <button className=\"button-class\" type=\"submit\">Guardar</button>\n          {state.msg && <h2>Autor añadido con exito</h2>}\n        </div>\n      </form>\n\n\n    </>\n  );\n}\n\nexport default AddAuthor;","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst BookListItem = ({ title, id }) => {\n  return (\n    <>\n      <div>\n        <h2>{title} </h2>\n      </div>\n      <div className=\"div-list\">\n          <Link to={`/dashboard/book/${id}`} style={{ textDecoration: 'none' }}>  \n            <h5>añadir noticia de prensa</h5>\n          </Link>\n        </div>\n    </>\n  );\n};\n\nexport default BookListItem;\n","import React, { useState, useEffect } from 'react';\nimport { firebaseApp } from '../../firebase';\nimport BookListItem from './BookListItem'\n\n\nconst ListBooks = () => {\n\n    const [state, updateState] = useState({ \n        imageUrl: '',\n        author: '',\n        title: '',\n        idBook: '',\n        listBooks: []\n      });\n    \n      useEffect(() => {\n    \n        const db = firebaseApp.firestore();\n        db.collection(\"books\")\n        .get()\n        .then(function(querySnapshot) {\n            querySnapshot.forEach(doc => {\n              state.listBooks.push({author: doc.data().author, imageUrl: doc.data().imageUrl, title: doc.data().title, idBook: doc.id})\n              updateState({...state, ...state.listBooks})\n                console.log(state.listBooks);\n            });\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n          //updateState(data.docs.map(doc => ({ ...doc.data(), id: doc.id }))); \n    \n      }, []);\n\n    return (\n        <>\n            <h1 className=\"ml-35\">Listado Libros</h1>\n            <br></br>\n            {state.listBooks.map(item => {\n            return <BookListItem key={item.title}  title={item.title} id={item.idBook} />\n            })}\n        </>\n    );\n}\n\nexport default ListBooks;","import React, { useState }  from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport AddBook from './AddBook';\nimport AddAuthor from './AddAuthor';\nimport ListBooks from './ListBooks';\n\n\nconst Dashboard = () => {\n\n  const routes = [\n    { path: `/dashboard/add-book`,\n      exact: true,\n      sidebar: () => <div>add book</div>,\n      main: () => <AddBook  />\n    },\n    { path: `/dashboard/add-author`,\n      exact: true,\n      sidebar: () => <div>add author</div>,\n      main: () => <AddAuthor/>\n    },\n    { path: `/dashboard/list-books`,\n      sidebar: () => <div>list books</div>,\n      main: () => <ListBooks/>\n    }\n  ]\n\n  return (\n    <>\n    <div className=\"ml-35\">\n      <nav>\n        <Link to={`/dashboard/add-book`}><p>add book</p></Link>\n        <Link to={`/dashboard/add-author`}><p>add author</p></Link>\n        <Link to={`/dashboard/list-books`}><p>list book</p></Link>\n      </nav>\n              {routes.map((route) => (\n                <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.main}\n                />\n                ))}\n            </div>\n    </>\n  );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n\n\n\nconst Login = (props) => {\n\n    const [state, updateState] = useState({\n        username: '',\n        password: ''\n      });\n\n    const handleInputChange = e => {\n        updateState({ ...state, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(state.username === 'fuga' && state.password === 'fuga') {\n            props.history.push('/dashboard');\n        }\n    }\n\n    return (\n        <>\n        <form className=\"form-class\" onSubmit={handleSubmit}>\n        <div className=\"div-class\">\n          <p className=\"label-class\">Username</p>\n          <input className=\"input-class\" placeholder=\"Username\" type=\"text\" onChange={handleInputChange} name=\"username\" value={state.username || ''} required />\n          <p className=\"label-class\">Password</p>\n          <input className=\"input-class\" placeholder=\"Password\" type=\"text\" onChange={handleInputChange} name=\"password\" value={state.password || ''} required/>\n\n         \n          <button className=\"button-class\" type=\"submit\">Login</button>\n\n        </div>\n      </form>\n            \n        </>\n    );\n}\n\nexport default withRouter(Login);","import React, { useState, useEffect } from \"react\";\nimport { firebaseApp } from \"../../firebase\";\nimport moment from \"moment\";\nimport DatePicker from \"@trendmicro/react-datepicker\";\nimport \"@trendmicro/react-datepicker/dist/react-datepicker.css\";\nimport FileUpload from \"./FileUpload\";\n\nconst BookNews = ({ id }) => {\n  const db = firebaseApp.firestore();\n\n  const [news, updateNews] = useState({\n    newsTitle: \"\",\n    newsDate: moment(new Date(Date.now())).format(\"YYYY-MM-DD\"),\n    newsUrl: \"\",\n    newsFileUrl: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    db.collection(`books/${id}/news`)\n      .add({\n        newsTitle: news.newsTitle,\n        newsDate: news.newsDate,\n        newsUrl: news.newsUrl,\n        newsFileUrl: news.newsFileUrl\n      })\n      .then(() => {\n        console.log(\"Document successfully written!\");\n      })\n      .catch(error => {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  const handleNewsInputChange = e => {\n    updateNews({ ...news, [e.target.name]: e.target.value });\n  };\n\n  const doNewsNoteUrl = url => {\n    updateNews({ ...news, newsFileUrl: url });\n  };\n\n  const handleDateNewsChange = e => {\n    updateNews({ ...news, newsDate: moment(new Date(e)).format(\"DD/MM/YYYY\") });\n  };\n\n  return (\n    <>\n      <form className=\"form-class\" onSubmit={handleSubmit}>\n        <div className=\"div-class\">\n            <h1 className=\"ml-35\">Añadir nueva Noticia</h1>\n          <p className=\"label-class\">Fecha noticia</p>\n          <p className=\"p-class\">{news.newsDate || \"\"}</p>\n          <DatePicker\n            defaultDate={news.newsDate}\n            onSelect={handleDateNewsChange}\n          />\n          <p className=\"label-class\">Titulo Noticia</p>\n          <input\n            className=\"input-class\"\n            placeholder=\"Titulo Noticia\"\n            type=\"text\"\n            onChange={handleNewsInputChange}\n            name=\"newsTitle\"\n            value={news.newsTitle || \"\"}\n            required\n          />\n          <p className=\"label-class\">Link Noticia</p>\n          <input\n            className=\"input-class\"\n            placeholder=\"Link Noticia\"\n            type=\"text\"\n            onChange={handleNewsInputChange}\n            name=\"newsUrl\"\n            value={news.newsUrl || \"\"}\n          />\n          <p className=\"label-class\">Importar fichero noticia</p>\n          <FileUpload\n            doImageUrl={doNewsNoteUrl}\n            fileType=\"pdfs\"\n            required={false}\n          />\n          <button className=\"button-class\" type=\"submit\">\n            Guardar\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default BookNews;\n","import React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport { StorageProvider } from \"./context/Storage\";\nimport Dashboard from './components/cms/Dashboard';\nimport Login from './components/cms/Login';\nimport BookNews from './components/cms/BookNews'\n\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <StorageProvider>\n        <Route path=\"/login\" render={() => <Login  /> } />\n        <Route path=\"/dashboard\" render={() => <Dashboard />} />\n        <Route exact path=\"/dashboard/book/:id\" render={(props) => <BookNews id={props.match.params.id}/> } />\n      </StorageProvider>\n\n      \n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}